#include "GeneralMagnus.hpp"

HHG::GeneralMagnus::u_matrix HHG::GeneralMagnus::Omega(std::array<h_float, 3> const& coeffs_1, std::array<h_float, 3> const& coeffs_2, 
    std::array<h_float, 3> const& coeffs_3, std::array<h_float, 3> const& coeffs_4) const
{
    std::array<std::array<h_float, 4>, 3> pow_coeffs_1;
    for (int j = 0; j < 3; ++j) {
        pow_coeffs_1[j][0] = coeffs_1[j] * coeffs_1[j];
        pow_coeffs_1[j][1] = pow_coeffs_1[j][0] * coeffs_1[j];
        pow_coeffs_1[j][2] = pow_coeffs_1[j][1] * coeffs_1[j];
        pow_coeffs_1[j][3] = pow_coeffs_1[j][2] * coeffs_1[j];
    }

    std::array<std::array<h_float, 2>, 3> pow_coeffs_2;
    for (int j = 0; j < 3; ++j) {
        pow_coeffs_2[j][0] = coeffs_2[j] * coeffs_2[j];
        pow_coeffs_2[j][1] = pow_coeffs_2[j][0] * coeffs_2[j];
    }
    
    std::array<h_float, 3> squared_coeffs_3;
    for (int j = 0; j < 3; ++j) {
        squared_coeffs_3[j] = coeffs_3[j] * coeffs_3[j];
    }

    const h_float a = pow_coeffs_1[0][3]*coeffs_2[1]/15120 - pow_coeffs_1[0][2]*coeffs_1[1]*coeffs_2[0]/15120 + pow_coeffs_1[0][2]*coeffs_3[2]/2520 + pow_coeffs_1[0][1]*pow_coeffs_1[1][0]*coeffs_2[1]/7560 + pow_coeffs_1[0][1]*pow_coeffs_1[2][0]*coeffs_2[1]/7560 - pow_coeffs_1[0][1]*coeffs_1[2]*coeffs_3[0]/2520 - pow_coeffs_1[0][1]*coeffs_2[0]*coeffs_2[2]/2520 + pow_coeffs_1[0][1]*coeffs_2[1]/360 - pow_coeffs_1[0][1]*coeffs_4[1]/840 - pow_coeffs_1[0][0]*pow_coeffs_1[1][1]*coeffs_2[0]/7560 + pow_coeffs_1[0][0]*pow_coeffs_1[1][0]*coeffs_3[2]/1260 - pow_coeffs_1[0][0]*coeffs_1[1]*pow_coeffs_1[2][0]*coeffs_2[0]/7560 - pow_coeffs_1[0][0]*coeffs_1[1]*coeffs_1[2]*coeffs_3[1]/2520 - pow_coeffs_1[0][0]*coeffs_1[1]*coeffs_2[0]/360 - pow_coeffs_1[0][0]*coeffs_1[1]*coeffs_2[1]*coeffs_2[2]/2520 + pow_coeffs_1[0][0]*coeffs_1[1]*coeffs_4[0]/840 + pow_coeffs_1[0][0]*pow_coeffs_1[2][0]*coeffs_3[2]/2520 + pow_coeffs_1[0][0]*coeffs_1[2]*pow_coeffs_2[0][0]/2520 + pow_coeffs_1[0][0]*coeffs_1[2]*pow_coeffs_2[1][0]/1890 + pow_coeffs_1[0][0]*coeffs_1[2]*pow_coeffs_2[2][0]/7560 + pow_coeffs_1[0][0]*coeffs_2[0]*coeffs_3[1]/504 + pow_coeffs_1[0][0]*coeffs_2[1]*coeffs_3[0]/2520 + coeffs_1[0]*pow_coeffs_1[1][2]*coeffs_2[1]/15120 + coeffs_1[0]*pow_coeffs_1[1][0]*pow_coeffs_1[2][0]*coeffs_2[1]/7560 - coeffs_1[0]*pow_coeffs_1[1][0]*coeffs_1[2]*coeffs_3[0]/2520 - coeffs_1[0]*pow_coeffs_1[1][0]*coeffs_2[0]*coeffs_2[2]/2520 + coeffs_1[0]*pow_coeffs_1[1][0]*coeffs_2[1]/360 - coeffs_1[0]*pow_coeffs_1[1][0]*coeffs_4[1]/840 - coeffs_1[0]*coeffs_1[1]*coeffs_1[2]*coeffs_2[0]*coeffs_2[1]/3780 - coeffs_1[0]*coeffs_1[1]*coeffs_2[0]*coeffs_3[0]/420 + coeffs_1[0]*coeffs_1[1]*coeffs_2[1]*coeffs_3[1]/420 + coeffs_1[0]*pow_coeffs_1[2][2]*coeffs_2[1]/15120 - coeffs_1[0]*pow_coeffs_1[2][1]*coeffs_3[0]/2520 - coeffs_1[0]*pow_coeffs_1[2][0]*coeffs_2[0]*coeffs_2[2]/1512 + coeffs_1[0]*pow_coeffs_1[2][0]*coeffs_2[1]/360 - coeffs_1[0]*pow_coeffs_1[2][0]*coeffs_4[1]/840 + coeffs_1[0]*coeffs_1[2]*coeffs_2[1]*coeffs_3[2]/252 - coeffs_1[0]*coeffs_1[2]*coeffs_2[2]*coeffs_3[1]/630 - coeffs_1[0]*pow_coeffs_2[0][0]*coeffs_2[1]/840 - coeffs_1[0]*coeffs_2[0]*coeffs_2[2]/60 + coeffs_1[0]*coeffs_2[0]*coeffs_4[2]/140 - coeffs_1[0]*pow_coeffs_2[1][1]/840 - coeffs_1[0]*coeffs_2[1]*pow_coeffs_2[2][0]/840 + coeffs_1[0]*coeffs_2[1]/6 - coeffs_1[0]*coeffs_2[2]*coeffs_4[0]/210 - coeffs_1[0]*coeffs_3[0]*coeffs_3[2]/420 - pow_coeffs_1[1][3]*coeffs_2[0]/15120 + pow_coeffs_1[1][2]*coeffs_3[2]/2520 - pow_coeffs_1[1][1]*pow_coeffs_1[2][0]*coeffs_2[0]/7560 - pow_coeffs_1[1][1]*coeffs_1[2]*coeffs_3[1]/2520 - pow_coeffs_1[1][1]*coeffs_2[0]/360 - pow_coeffs_1[1][1]*coeffs_2[1]*coeffs_2[2]/2520 + pow_coeffs_1[1][1]*coeffs_4[0]/840 + pow_coeffs_1[1][0]*pow_coeffs_1[2][0]*coeffs_3[2]/2520 + pow_coeffs_1[1][0]*coeffs_1[2]*pow_coeffs_2[0][0]/1890 + pow_coeffs_1[1][0]*coeffs_1[2]*pow_coeffs_2[1][0]/2520 + pow_coeffs_1[1][0]*coeffs_1[2]*pow_coeffs_2[2][0]/7560 - pow_coeffs_1[1][0]*coeffs_2[0]*coeffs_3[1]/2520 - pow_coeffs_1[1][0]*coeffs_2[1]*coeffs_3[0]/504 - coeffs_1[1]*pow_coeffs_1[2][2]*coeffs_2[0]/15120 - coeffs_1[1]*pow_coeffs_1[2][1]*coeffs_3[1]/2520 - coeffs_1[1]*pow_coeffs_1[2][0]*coeffs_2[0]/360 - coeffs_1[1]*pow_coeffs_1[2][0]*coeffs_2[1]*coeffs_2[2]/1512 + coeffs_1[1]*pow_coeffs_1[2][0]*coeffs_4[0]/840 - coeffs_1[1]*coeffs_1[2]*coeffs_2[0]*coeffs_3[2]/252 + coeffs_1[1]*coeffs_1[2]*coeffs_2[2]*coeffs_3[0]/630 + coeffs_1[1]*pow_coeffs_2[0][1]/840 + coeffs_1[1]*coeffs_2[0]*pow_coeffs_2[1][0]/840 + coeffs_1[1]*coeffs_2[0]*pow_coeffs_2[2][0]/840 - coeffs_1[1]*coeffs_2[0]/6 - coeffs_1[1]*coeffs_2[1]*coeffs_2[2]/60 + coeffs_1[1]*coeffs_2[1]*coeffs_4[2]/140 - coeffs_1[1]*coeffs_2[2]*coeffs_4[1]/210 - coeffs_1[1]*coeffs_3[1]*coeffs_3[2]/420 + pow_coeffs_1[2][1]*pow_coeffs_2[0][0]/1890 + pow_coeffs_1[2][1]*pow_coeffs_2[1][0]/1890 + pow_coeffs_1[2][0]*coeffs_2[0]*coeffs_3[1]/280 - pow_coeffs_1[2][0]*coeffs_2[1]*coeffs_3[0]/280 + coeffs_1[2]*pow_coeffs_2[0][0]/60 - coeffs_1[2]*coeffs_2[0]*coeffs_4[0]/420 + coeffs_1[2]*pow_coeffs_2[1][0]/60 - coeffs_1[2]*coeffs_2[1]*coeffs_4[1]/420 + coeffs_1[2]*squared_coeffs_3[0]/420 + coeffs_1[2]*squared_coeffs_3[1]/420 - coeffs_1[2] - pow_coeffs_2[0][0]*coeffs_3[2]/210 + coeffs_2[0]*coeffs_2[2]*coeffs_3[0]/210 + coeffs_2[0]*coeffs_3[1]/30 - pow_coeffs_2[1][0]*coeffs_3[2]/210 + coeffs_2[1]*coeffs_2[2]*coeffs_3[1]/210 - coeffs_2[1]*coeffs_3[0]/30 + coeffs_3[0]*coeffs_4[1]/70 - coeffs_3[1]*coeffs_4[0]/70;

    const h_float b = pow_coeffs_1[0][3]*coeffs_2[2]/15120 - pow_coeffs_1[0][2]*coeffs_1[2]*coeffs_2[0]/15120 - pow_coeffs_1[0][2]*coeffs_3[1]/2520 + pow_coeffs_1[0][1]*pow_coeffs_1[1][0]*coeffs_2[2]/7560 + pow_coeffs_1[0][1]*coeffs_1[1]*coeffs_3[0]/2520 + pow_coeffs_1[0][1]*pow_coeffs_1[2][0]*coeffs_2[2]/7560 + pow_coeffs_1[0][1]*coeffs_2[0]*coeffs_2[1]/2520 + pow_coeffs_1[0][1]*coeffs_2[2]/360 - pow_coeffs_1[0][1]*coeffs_4[2]/840 - pow_coeffs_1[0][0]*pow_coeffs_1[1][0]*coeffs_1[2]*coeffs_2[0]/7560 - pow_coeffs_1[0][0]*pow_coeffs_1[1][0]*coeffs_3[1]/2520 + pow_coeffs_1[0][0]*coeffs_1[1]*coeffs_1[2]*coeffs_3[2]/2520 - pow_coeffs_1[0][0]*coeffs_1[1]*pow_coeffs_2[0][0]/2520 - pow_coeffs_1[0][0]*coeffs_1[1]*pow_coeffs_2[1][0]/7560 - pow_coeffs_1[0][0]*coeffs_1[1]*pow_coeffs_2[2][0]/1890 - pow_coeffs_1[0][0]*pow_coeffs_1[2][1]*coeffs_2[0]/7560 - pow_coeffs_1[0][0]*pow_coeffs_1[2][0]*coeffs_3[1]/1260 - pow_coeffs_1[0][0]*coeffs_1[2]*coeffs_2[0]/360 + pow_coeffs_1[0][0]*coeffs_1[2]*coeffs_2[1]*coeffs_2[2]/2520 + pow_coeffs_1[0][0]*coeffs_1[2]*coeffs_4[0]/840 + pow_coeffs_1[0][0]*coeffs_2[0]*coeffs_3[2]/504 + pow_coeffs_1[0][0]*coeffs_2[2]*coeffs_3[0]/2520 + coeffs_1[0]*pow_coeffs_1[1][2]*coeffs_2[2]/15120 + coeffs_1[0]*pow_coeffs_1[1][1]*coeffs_3[0]/2520 + coeffs_1[0]*pow_coeffs_1[1][0]*pow_coeffs_1[2][0]*coeffs_2[2]/7560 + coeffs_1[0]*pow_coeffs_1[1][0]*coeffs_2[0]*coeffs_2[1]/1512 + coeffs_1[0]*pow_coeffs_1[1][0]*coeffs_2[2]/360 - coeffs_1[0]*pow_coeffs_1[1][0]*coeffs_4[2]/840 + coeffs_1[0]*coeffs_1[1]*pow_coeffs_1[2][0]*coeffs_3[0]/2520 + coeffs_1[0]*coeffs_1[1]*coeffs_1[2]*coeffs_2[0]*coeffs_2[2]/3780 - coeffs_1[0]*coeffs_1[1]*coeffs_2[1]*coeffs_3[2]/630 + coeffs_1[0]*coeffs_1[1]*coeffs_2[2]*coeffs_3[1]/252 + coeffs_1[0]*pow_coeffs_1[2][2]*coeffs_2[2]/15120 + coeffs_1[0]*pow_coeffs_1[2][0]*coeffs_2[0]*coeffs_2[1]/2520 + coeffs_1[0]*pow_coeffs_1[2][0]*coeffs_2[2]/360 - coeffs_1[0]*pow_coeffs_1[2][0]*coeffs_4[2]/840 - coeffs_1[0]*coeffs_1[2]*coeffs_2[0]*coeffs_3[0]/420 + coeffs_1[0]*coeffs_1[2]*coeffs_2[2]*coeffs_3[2]/420 - coeffs_1[0]*pow_coeffs_2[0][0]*coeffs_2[2]/840 + coeffs_1[0]*coeffs_2[0]*coeffs_2[1]/60 - coeffs_1[0]*coeffs_2[0]*coeffs_4[1]/140 - coeffs_1[0]*pow_coeffs_2[1][0]*coeffs_2[2]/840 + coeffs_1[0]*coeffs_2[1]*coeffs_4[0]/210 - coeffs_1[0]*pow_coeffs_2[2][1]/840 + coeffs_1[0]*coeffs_2[2]/6 + coeffs_1[0]*coeffs_3[0]*coeffs_3[1]/420 - pow_coeffs_1[1][2]*coeffs_1[2]*coeffs_2[0]/15120 + pow_coeffs_1[1][1]*coeffs_1[2]*coeffs_3[2]/2520 - pow_coeffs_1[1][1]*pow_coeffs_2[0][0]/1890 - pow_coeffs_1[1][1]*pow_coeffs_2[2][0]/1890 - pow_coeffs_1[1][0]*pow_coeffs_1[2][1]*coeffs_2[0]/7560 - pow_coeffs_1[1][0]*pow_coeffs_1[2][0]*coeffs_3[1]/2520 - pow_coeffs_1[1][0]*coeffs_1[2]*coeffs_2[0]/360 + pow_coeffs_1[1][0]*coeffs_1[2]*coeffs_2[1]*coeffs_2[2]/1512 + pow_coeffs_1[1][0]*coeffs_1[2]*coeffs_4[0]/840 + pow_coeffs_1[1][0]*coeffs_2[0]*coeffs_3[2]/280 - pow_coeffs_1[1][0]*coeffs_2[2]*coeffs_3[0]/280 + coeffs_1[1]*pow_coeffs_1[2][1]*coeffs_3[2]/2520 - coeffs_1[1]*pow_coeffs_1[2][0]*pow_coeffs_2[0][0]/1890 - coeffs_1[1]*pow_coeffs_1[2][0]*pow_coeffs_2[1][0]/7560 - coeffs_1[1]*pow_coeffs_1[2][0]*pow_coeffs_2[2][0]/2520 - coeffs_1[1]*coeffs_1[2]*coeffs_2[0]*coeffs_3[1]/252 + coeffs_1[1]*coeffs_1[2]*coeffs_2[1]*coeffs_3[0]/630 - coeffs_1[1]*pow_coeffs_2[0][0]/60 + coeffs_1[1]*coeffs_2[0]*coeffs_4[0]/420 - coeffs_1[1]*pow_coeffs_2[2][0]/60 + coeffs_1[1]*coeffs_2[2]*coeffs_4[2]/420 - coeffs_1[1]*squared_coeffs_3[0]/420 - coeffs_1[1]*squared_coeffs_3[2]/420 + coeffs_1[1] - pow_coeffs_1[2][3]*coeffs_2[0]/15120 - pow_coeffs_1[2][2]*coeffs_3[1]/2520 - pow_coeffs_1[2][1]*coeffs_2[0]/360 + pow_coeffs_1[2][1]*coeffs_2[1]*coeffs_2[2]/2520 + pow_coeffs_1[2][1]*coeffs_4[0]/840 - pow_coeffs_1[2][0]*coeffs_2[0]*coeffs_3[2]/2520 - pow_coeffs_1[2][0]*coeffs_2[2]*coeffs_3[0]/504 + coeffs_1[2]*pow_coeffs_2[0][1]/840 + coeffs_1[2]*coeffs_2[0]*pow_coeffs_2[1][0]/840 + coeffs_1[2]*coeffs_2[0]*pow_coeffs_2[2][0]/840 - coeffs_1[2]*coeffs_2[0]/6 + coeffs_1[2]*coeffs_2[1]*coeffs_2[2]/60 + coeffs_1[2]*coeffs_2[1]*coeffs_4[2]/210 - coeffs_1[2]*coeffs_2[2]*coeffs_4[1]/140 + coeffs_1[2]*coeffs_3[1]*coeffs_3[2]/420 + pow_coeffs_2[0][0]*coeffs_3[1]/210 - coeffs_2[0]*coeffs_2[1]*coeffs_3[0]/210 + coeffs_2[0]*coeffs_3[2]/30 - coeffs_2[1]*coeffs_2[2]*coeffs_3[2]/210 + pow_coeffs_2[2][0]*coeffs_3[1]/210 - coeffs_2[2]*coeffs_3[0]/30 + coeffs_3[0]*coeffs_4[2]/70 - coeffs_3[2]*coeffs_4[0]/70;

    const h_float c = pow_coeffs_1[0][2]*coeffs_1[1]*coeffs_2[2]/15120 - pow_coeffs_1[0][2]*coeffs_1[2]*coeffs_2[1]/15120 - pow_coeffs_1[0][1]*coeffs_1[1]*coeffs_3[1]/2520 - pow_coeffs_1[0][1]*coeffs_1[2]*coeffs_3[2]/2520 + pow_coeffs_1[0][1]*pow_coeffs_2[1][0]/1890 + pow_coeffs_1[0][1]*pow_coeffs_2[2][0]/1890 + pow_coeffs_1[0][0]*pow_coeffs_1[1][1]*coeffs_2[2]/7560 - pow_coeffs_1[0][0]*pow_coeffs_1[1][0]*coeffs_1[2]*coeffs_2[1]/7560 + pow_coeffs_1[0][0]*pow_coeffs_1[1][0]*coeffs_3[0]/2520 + pow_coeffs_1[0][0]*coeffs_1[1]*pow_coeffs_1[2][0]*coeffs_2[2]/7560 - pow_coeffs_1[0][0]*coeffs_1[1]*coeffs_2[0]*coeffs_2[1]/1512 + pow_coeffs_1[0][0]*coeffs_1[1]*coeffs_2[2]/360 - pow_coeffs_1[0][0]*coeffs_1[1]*coeffs_4[2]/840 - pow_coeffs_1[0][0]*pow_coeffs_1[2][1]*coeffs_2[1]/7560 + pow_coeffs_1[0][0]*pow_coeffs_1[2][0]*coeffs_3[0]/2520 - pow_coeffs_1[0][0]*coeffs_1[2]*coeffs_2[0]*coeffs_2[2]/1512 - pow_coeffs_1[0][0]*coeffs_1[2]*coeffs_2[1]/360 + pow_coeffs_1[0][0]*coeffs_1[2]*coeffs_4[1]/840 + pow_coeffs_1[0][0]*coeffs_2[1]*coeffs_3[2]/280 - pow_coeffs_1[0][0]*coeffs_2[2]*coeffs_3[1]/280 - coeffs_1[0]*pow_coeffs_1[1][1]*coeffs_3[1]/2520 - coeffs_1[0]*pow_coeffs_1[1][0]*coeffs_1[2]*coeffs_3[2]/2520 + coeffs_1[0]*pow_coeffs_1[1][0]*pow_coeffs_2[0][0]/7560 + coeffs_1[0]*pow_coeffs_1[1][0]*pow_coeffs_2[1][0]/2520 + coeffs_1[0]*pow_coeffs_1[1][0]*pow_coeffs_2[2][0]/1890 - coeffs_1[0]*coeffs_1[1]*pow_coeffs_1[2][0]*coeffs_3[1]/2520 - coeffs_1[0]*coeffs_1[1]*coeffs_1[2]*coeffs_2[1]*coeffs_2[2]/3780 - coeffs_1[0]*coeffs_1[1]*coeffs_2[0]*coeffs_3[2]/630 + coeffs_1[0]*coeffs_1[1]*coeffs_2[2]*coeffs_3[0]/252 - coeffs_1[0]*pow_coeffs_1[2][1]*coeffs_3[2]/2520 + coeffs_1[0]*pow_coeffs_1[2][0]*pow_coeffs_2[0][0]/7560 + coeffs_1[0]*pow_coeffs_1[2][0]*pow_coeffs_2[1][0]/1890 + coeffs_1[0]*pow_coeffs_1[2][0]*pow_coeffs_2[2][0]/2520 + coeffs_1[0]*coeffs_1[2]*coeffs_2[0]*coeffs_3[1]/630 - coeffs_1[0]*coeffs_1[2]*coeffs_2[1]*coeffs_3[0]/252 + coeffs_1[0]*pow_coeffs_2[1][0]/60 - coeffs_1[0]*coeffs_2[1]*coeffs_4[1]/420 + coeffs_1[0]*pow_coeffs_2[2][0]/60 - coeffs_1[0]*coeffs_2[2]*coeffs_4[2]/420 + coeffs_1[0]*squared_coeffs_3[1]/420 + coeffs_1[0]*squared_coeffs_3[2]/420 - coeffs_1[0] + pow_coeffs_1[1][3]*coeffs_2[2]/15120 - pow_coeffs_1[1][2]*coeffs_1[2]*coeffs_2[1]/15120 + pow_coeffs_1[1][2]*coeffs_3[0]/2520 + pow_coeffs_1[1][1]*pow_coeffs_1[2][0]*coeffs_2[2]/7560 - pow_coeffs_1[1][1]*coeffs_2[0]*coeffs_2[1]/2520 + pow_coeffs_1[1][1]*coeffs_2[2]/360 - pow_coeffs_1[1][1]*coeffs_4[2]/840 - pow_coeffs_1[1][0]*pow_coeffs_1[2][1]*coeffs_2[1]/7560 + pow_coeffs_1[1][0]*pow_coeffs_1[2][0]*coeffs_3[0]/1260 - pow_coeffs_1[1][0]*coeffs_1[2]*coeffs_2[0]*coeffs_2[2]/2520 - pow_coeffs_1[1][0]*coeffs_1[2]*coeffs_2[1]/360 + pow_coeffs_1[1][0]*coeffs_1[2]*coeffs_4[1]/840 + pow_coeffs_1[1][0]*coeffs_2[1]*coeffs_3[2]/504 + pow_coeffs_1[1][0]*coeffs_2[2]*coeffs_3[1]/2520 + coeffs_1[1]*pow_coeffs_1[2][2]*coeffs_2[2]/15120 - coeffs_1[1]*pow_coeffs_1[2][0]*coeffs_2[0]*coeffs_2[1]/2520 + coeffs_1[1]*pow_coeffs_1[2][0]*coeffs_2[2]/360 - coeffs_1[1]*pow_coeffs_1[2][0]*coeffs_4[2]/840 - coeffs_1[1]*coeffs_1[2]*coeffs_2[1]*coeffs_3[1]/420 + coeffs_1[1]*coeffs_1[2]*coeffs_2[2]*coeffs_3[2]/420 - coeffs_1[1]*pow_coeffs_2[0][0]*coeffs_2[2]/840 - coeffs_1[1]*coeffs_2[0]*coeffs_2[1]/60 - coeffs_1[1]*coeffs_2[0]*coeffs_4[1]/210 - coeffs_1[1]*pow_coeffs_2[1][0]*coeffs_2[2]/840 + coeffs_1[1]*coeffs_2[1]*coeffs_4[0]/140 - coeffs_1[1]*pow_coeffs_2[2][1]/840 + coeffs_1[1]*coeffs_2[2]/6 - coeffs_1[1]*coeffs_3[0]*coeffs_3[1]/420 - pow_coeffs_1[2][3]*coeffs_2[1]/15120 + pow_coeffs_1[2][2]*coeffs_3[0]/2520 - pow_coeffs_1[2][1]*coeffs_2[0]*coeffs_2[2]/2520 - pow_coeffs_1[2][1]*coeffs_2[1]/360 + pow_coeffs_1[2][1]*coeffs_4[1]/840 - pow_coeffs_1[2][0]*coeffs_2[1]*coeffs_3[2]/2520 - pow_coeffs_1[2][0]*coeffs_2[2]*coeffs_3[1]/504 + coeffs_1[2]*pow_coeffs_2[0][0]*coeffs_2[1]/840 - coeffs_1[2]*coeffs_2[0]*coeffs_2[2]/60 - coeffs_1[2]*coeffs_2[0]*coeffs_4[2]/210 + coeffs_1[2]*pow_coeffs_2[1][1]/840 + coeffs_1[2]*coeffs_2[1]*pow_coeffs_2[2][0]/840 - coeffs_1[2]*coeffs_2[1]/6 + coeffs_1[2]*coeffs_2[2]*coeffs_4[0]/140 - coeffs_1[2]*coeffs_3[0]*coeffs_3[2]/420 + coeffs_2[0]*coeffs_2[1]*coeffs_3[1]/210 + coeffs_2[0]*coeffs_2[2]*coeffs_3[2]/210 - pow_coeffs_2[1][0]*coeffs_3[0]/210 + coeffs_2[1]*coeffs_3[2]/30 - pow_coeffs_2[2][0]*coeffs_3[0]/210 - coeffs_2[2]*coeffs_3[1]/30 + coeffs_3[1]*coeffs_4[2]/70 - coeffs_3[2]*coeffs_4[1]/70;

    /* Omega = 
     *  0,  a, b,
     * -a,  0, c,
     * -b, -c, 0;
     */

     const h_float norm_squared = a * a + b * b + c * c;
     const h_float ev = sqrt(norm_squared); // to be multiplied by +/- i. The third eigenvalue is 0.
     
     const h_float x = std::cos(ev);
     const h_float y = std::sin(ev);
 
     u_matrix U;
     U << (a*a + b*b)*x + c*c,   (b*c*(x-1) + a*ev*y), (-a*c*(x-1) + b*ev*y),
          (b*c*(x-1) - a*ev*y),  (a*a + c*c)*x + b*b,  (a*b*(x-1) + c*ev*y),
          (-a*c*(x-1) - b*ev*y), (a*b*(x-1) - c*ev*y), (b*b + c*c)*x + a*a;
     U /= norm_squared;
     return U;
}